//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElizabethLibrary.LibraryService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/LibraryService.Models")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ElizabethLibrary.LibraryService.Author AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ISBNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ElizabethLibrary.LibraryService.Author Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookId {
            get {
                return this.BookIdField;
            }
            set {
                if ((this.BookIdField.Equals(value) != true)) {
                    this.BookIdField = value;
                    this.RaisePropertyChanged("BookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISBN {
            get {
                return this.ISBNField;
            }
            set {
                if ((object.ReferenceEquals(this.ISBNField, value) != true)) {
                    this.ISBNField = value;
                    this.RaisePropertyChanged("ISBN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Author", Namespace="http://schemas.datacontract.org/2004/07/LibraryService.Models")]
    [System.SerializableAttribute()]
    public partial class Author : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ElizabethLibrary.LibraryService.Book[] BooksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorID {
            get {
                return this.AuthorIDField;
            }
            set {
                if ((this.AuthorIDField.Equals(value) != true)) {
                    this.AuthorIDField = value;
                    this.RaisePropertyChanged("AuthorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ElizabethLibrary.LibraryService.Book[] Books {
            get {
                return this.BooksField;
            }
            set {
                if ((object.ReferenceEquals(this.BooksField, value) != true)) {
                    this.BooksField = value;
                    this.RaisePropertyChanged("Books");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LibraryService.ILibraryService")]
    public interface ILibraryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBook", ReplyAction="http://tempuri.org/ILibraryService/GetBookResponse")]
        ElizabethLibrary.LibraryService.Book GetBook(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBook", ReplyAction="http://tempuri.org/ILibraryService/GetBookResponse")]
        System.Threading.Tasks.Task<ElizabethLibrary.LibraryService.Book> GetBookAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBooks", ReplyAction="http://tempuri.org/ILibraryService/GetBooksResponse")]
        ElizabethLibrary.LibraryService.Book[] GetBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBooks", ReplyAction="http://tempuri.org/ILibraryService/GetBooksResponse")]
        System.Threading.Tasks.Task<ElizabethLibrary.LibraryService.Book[]> GetBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetAuthor", ReplyAction="http://tempuri.org/ILibraryService/GetAuthorResponse")]
        ElizabethLibrary.LibraryService.Author GetAuthor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetAuthor", ReplyAction="http://tempuri.org/ILibraryService/GetAuthorResponse")]
        System.Threading.Tasks.Task<ElizabethLibrary.LibraryService.Author> GetAuthorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetAuthors", ReplyAction="http://tempuri.org/ILibraryService/GetAuthorsResponse")]
        ElizabethLibrary.LibraryService.Author[] GetAuthors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetAuthors", ReplyAction="http://tempuri.org/ILibraryService/GetAuthorsResponse")]
        System.Threading.Tasks.Task<ElizabethLibrary.LibraryService.Author[]> GetAuthorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBooksByAuthorID", ReplyAction="http://tempuri.org/ILibraryService/GetBooksByAuthorIDResponse")]
        ElizabethLibrary.LibraryService.Book[] GetBooksByAuthorID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBooksByAuthorID", ReplyAction="http://tempuri.org/ILibraryService/GetBooksByAuthorIDResponse")]
        System.Threading.Tasks.Task<ElizabethLibrary.LibraryService.Book[]> GetBooksByAuthorIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddNewBook", ReplyAction="http://tempuri.org/ILibraryService/AddNewBookResponse")]
        void AddNewBook(ElizabethLibrary.LibraryService.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddNewBook", ReplyAction="http://tempuri.org/ILibraryService/AddNewBookResponse")]
        System.Threading.Tasks.Task AddNewBookAsync(ElizabethLibrary.LibraryService.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddNewAuthor", ReplyAction="http://tempuri.org/ILibraryService/AddNewAuthorResponse")]
        void AddNewAuthor(ElizabethLibrary.LibraryService.Author author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddNewAuthor", ReplyAction="http://tempuri.org/ILibraryService/AddNewAuthorResponse")]
        System.Threading.Tasks.Task AddNewAuthorAsync(ElizabethLibrary.LibraryService.Author author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdateBook", ReplyAction="http://tempuri.org/ILibraryService/UpdateBookResponse")]
        ElizabethLibrary.LibraryService.Book UpdateBook(ElizabethLibrary.LibraryService.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdateBook", ReplyAction="http://tempuri.org/ILibraryService/UpdateBookResponse")]
        System.Threading.Tasks.Task<ElizabethLibrary.LibraryService.Book> UpdateBookAsync(ElizabethLibrary.LibraryService.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdateAuthor", ReplyAction="http://tempuri.org/ILibraryService/UpdateAuthorResponse")]
        ElizabethLibrary.LibraryService.Author UpdateAuthor(ElizabethLibrary.LibraryService.Author author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdateAuthor", ReplyAction="http://tempuri.org/ILibraryService/UpdateAuthorResponse")]
        System.Threading.Tasks.Task<ElizabethLibrary.LibraryService.Author> UpdateAuthorAsync(ElizabethLibrary.LibraryService.Author author);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILibraryServiceChannel : ElizabethLibrary.LibraryService.ILibraryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LibraryServiceClient : System.ServiceModel.ClientBase<ElizabethLibrary.LibraryService.ILibraryService>, ElizabethLibrary.LibraryService.ILibraryService {
        
        public LibraryServiceClient() {
        }
        
        public LibraryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LibraryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ElizabethLibrary.LibraryService.Book GetBook(int id) {
            return base.Channel.GetBook(id);
        }
        
        public System.Threading.Tasks.Task<ElizabethLibrary.LibraryService.Book> GetBookAsync(int id) {
            return base.Channel.GetBookAsync(id);
        }
        
        public ElizabethLibrary.LibraryService.Book[] GetBooks() {
            return base.Channel.GetBooks();
        }
        
        public System.Threading.Tasks.Task<ElizabethLibrary.LibraryService.Book[]> GetBooksAsync() {
            return base.Channel.GetBooksAsync();
        }
        
        public ElizabethLibrary.LibraryService.Author GetAuthor(int id) {
            return base.Channel.GetAuthor(id);
        }
        
        public System.Threading.Tasks.Task<ElizabethLibrary.LibraryService.Author> GetAuthorAsync(int id) {
            return base.Channel.GetAuthorAsync(id);
        }
        
        public ElizabethLibrary.LibraryService.Author[] GetAuthors() {
            return base.Channel.GetAuthors();
        }
        
        public System.Threading.Tasks.Task<ElizabethLibrary.LibraryService.Author[]> GetAuthorsAsync() {
            return base.Channel.GetAuthorsAsync();
        }
        
        public ElizabethLibrary.LibraryService.Book[] GetBooksByAuthorID(int id) {
            return base.Channel.GetBooksByAuthorID(id);
        }
        
        public System.Threading.Tasks.Task<ElizabethLibrary.LibraryService.Book[]> GetBooksByAuthorIDAsync(int id) {
            return base.Channel.GetBooksByAuthorIDAsync(id);
        }
        
        public void AddNewBook(ElizabethLibrary.LibraryService.Book book) {
            base.Channel.AddNewBook(book);
        }
        
        public System.Threading.Tasks.Task AddNewBookAsync(ElizabethLibrary.LibraryService.Book book) {
            return base.Channel.AddNewBookAsync(book);
        }
        
        public void AddNewAuthor(ElizabethLibrary.LibraryService.Author author) {
            base.Channel.AddNewAuthor(author);
        }
        
        public System.Threading.Tasks.Task AddNewAuthorAsync(ElizabethLibrary.LibraryService.Author author) {
            return base.Channel.AddNewAuthorAsync(author);
        }
        
        public ElizabethLibrary.LibraryService.Book UpdateBook(ElizabethLibrary.LibraryService.Book book) {
            return base.Channel.UpdateBook(book);
        }
        
        public System.Threading.Tasks.Task<ElizabethLibrary.LibraryService.Book> UpdateBookAsync(ElizabethLibrary.LibraryService.Book book) {
            return base.Channel.UpdateBookAsync(book);
        }
        
        public ElizabethLibrary.LibraryService.Author UpdateAuthor(ElizabethLibrary.LibraryService.Author author) {
            return base.Channel.UpdateAuthor(author);
        }
        
        public System.Threading.Tasks.Task<ElizabethLibrary.LibraryService.Author> UpdateAuthorAsync(ElizabethLibrary.LibraryService.Author author) {
            return base.Channel.UpdateAuthorAsync(author);
        }
    }
}
